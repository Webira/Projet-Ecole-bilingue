security:
    encoders:
        App\Entity\User:
           algorithm: bcrypt
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            #provider: users_in_memory
            provider: in_database
#            guard:
#                authenticators: App\Security\AppAuthenticator
#                entry_point: App\Security\AppAuthenticator
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: logout
                target: accueilSite

           # custom_authenticator: App\Security\AppAuthenticator


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profil, roles: ROLE_USER }

    role_hierarchy:
        ROLE_REGIST: ROLE_USER
        ROLE_ADMIN: ROLE_REGIST